name: Deployment

on:
  push:
    branches:
      - main  # run when pushing to main

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      HETZNER_TOKEN: ${{ secrets.HETZNER_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Hetzner CLI
        run: |
          curl -O https://github.com/hetznercloud/cli/releases/download/v1.40.1/hcloud-linux-amd64.tar.gz
          tar -xvzf hcloud-linux-amd64.tar.gz
          sudo mv hcloud /usr/local/bin/

      - name: Destroy existing servers if they exist
        run: |
          for name in k3s-cluster-master k3s-cluster-worker-1 k3s-cluster-worker-2; do
            if hcloud server list -o columns=NAME,STATUS | grep -q $name; then
              echo "Destroying existing server $name..."
              hcloud server delete $name || true
            fi
          done

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="hcloud_token=${{ secrets.HETZNER_TOKEN }}" \
            -var="docker_user=${{ secrets.DOCKER_USER }}" \
            -var="docker_pass=${{ secrets.DOCKER_PASS }}" \
            -out=tfplan

      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve tfplan

      - name: Terraform Destroy on failure
        if: failure()
        run: |
          terraform destroy -auto-approve \
            -var="hcloud_token=${{ secrets.HETZNER_TOKEN }}" \
            -var="docker_user=${{ secrets.DOCKER_USER }}" \
            -var="docker_pass=${{ secrets.DOCKER_PASS }}"
